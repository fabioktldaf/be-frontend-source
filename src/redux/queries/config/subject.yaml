#########################################################################
#                                                                       #
#   yaml --> json   https://onlineyamltools.com/convert-yaml-to-json    #
#   json --> yaml   https://www.json2yaml.com/                          #
#                                                                       #
#########################################################################
openapi: 3.0.0
info:
  title: Subject API
  descriptio: Manages data related to a subject
  version: 1.0.0
# servers:
# - url: http://api.example.com/v1
# description: Optional server description, e.g. Main (production) server
# - url: http://staging-api.example.com
# description: Optional server description, e.g. Internal staging server for testing
paths:
  /subject/{id}:
    get:
      summary: Retrieve a subject data
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric Id of the subject data to retrieve
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: The JSON Web Token  that confirms the successfull authentication of the user on the frontend
      responses:
        "200":
          description: A JSON representing the subject data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubjectData"
        "400":
          description: Subject id not found
        "404":
          description: The specified subject id is invalid
        default:
          description: Unexpected error
    post:
      summary: Insert a new subject
      requestBody:
        description: New subject data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectData"
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: The JSON Web Token  that confirms the successfull authentication of the user on the frontend
      responses:
        "201":
          description: A new subject has been created
        "400":
          description: Invalid subject data
        default:
          description: Unexpected error
    put:
      summary: Update a subject
      requestBody:
      description: Update a subject data
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SubjectData"
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: The JSON Web Token  that confirms the successfull authentication of the user on the frontend
      responses:
        "204":
          description: Subject sata updated
        "400":
          description: Subject id not found
        "404":
          description: The specified subject data is invalid
        default:
          description: Unexpected error
    delete:
      summary: Delete a subject
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric Id of the subject to delete
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: The JSON Web Token  that confirms the successfull authentication of the user on the frontend
      responses:
        "204":
          description: The subject has been deleted
        "400":
          description: Subject id not found
        default:
          description: Unexpected error
components:
  schemas:
    SubjectData:
      type: object
      properties:
        naturalPerson:
          type: "#/components/schemas/SubjectNaturalPersonData"
          description: Data of a physical subject or of the owner of a proprietorship
        giuridicalPerson:
          type: "#/components/schemas/SubjectGiuridicalPersonData"
          description: Data of a giuridical subject
        contacts:
          type: array
          items:
            type: "#/components/schemas/SubjectContactData"
          description: Contact list
        addresses:
          type: array
          items:
            type: "#/components/schemas/SubjectAddressData"
          description: Addresses List
        documents:
          type: array
          items:
            type: "#/components/schemas/SubjectDocumentData"
          description: Documents List
        payments:
          type: array
          items:
            type: "#/components/schemas/SubjectPaymentData"
          description: Payment methods List
    SubjectNaturalPersonData:
      type: object
      properties:
        name:
          type: string
          description: Name of the subject
          example: Nadia
        lastname:
          type: string
          description: Lastname of the subject
          example: Pirozzi
        gender:
          type: string
          enum: [male, female]
          description: Gender of the subject
          example: male
        fiscalCode:
          type: string
          description: Fiscal code of the subject
          example: RVLRMM01H41F241N
        birth:
          type: "#/components/schemas/NaturalPersonBirth"
          description: Details of the birth of the natural subject
          example: 15/01/2000 Milano Lombardia Italia
    SubjectGiuridicalPersonData:
      type: object
      properties:
        isProprietorship:
          type: boolean
          description: Indicates whether the giuridical subject is a proprietorship
          example: true
        business_name:
          type: string
          description: Name of the giuridical subject
          example: Hickle-Hettinger
        type:
          type: string
          enum: [srl, spa, proprietorship]
          description: Type of giuridical subject
          example: spa
        registeredOffice:
          type: "#/components/schemas/SubjectAddressData"
          description: Address of the registered office of the giuridical subject
          example: Viale delle Province 78, 95121 San Giuseppe Alla Rena CT Italia
        pIva:
          type: string
          description: VAT number of the giuridical subject
          example: 01223580554
    SubjectContactData:
      type: object
      properties:
        type:
          type: string
          enum[: [pec, phone, email, mobile]
          description: Type of the contact
          example: phone
        value:
          type: string
          description: Contact info details
          example: +39 02 4036179
        description:
          type: string
          description: Description of the this contact
          example: I only answer this number between 9:00 and 18:00
        useCase:
          type: string
          enum: [communications, contact-mode, send-informations]
          description: Type of use case of this contact
          example: communications
        preferred:
          type: boolean
          description: If this is the preferred contact of this type
          example: true
    SubjectAddressData:
      type: object
      properties:
        type:
          type: string
          enum: [domicile, residence, shipping, registered-office, operating-office]
          description: Type of address
          example: domicile
        street:
          type: string
          description: Street name
          example: via della Martinella
        civic:
          type: string
          description: Civic number
          example: 3/A
        cap:
          type: number
          description: Postal code
          example: 20152
        city:
          type: string
          description: City name
          example: Milano
        province:
          type: string
          description: Province name
          example: Lombardia
        country:
          type: string
          description: Country name
          example: Italia
        preferred:
          type: boolean
          description: If this is the preferred address
          example: true
    SubjectDocumentData:
      type: object
      properties:
        type:
          type: string
          enum: [card-id, passport, driving-license, fiscal-code]
          description: Type of document
          example: KK5004513
        number:
          type: string
          description: Number of the document
          example: AA11111EE
        issuingDate:
          type: string
          pattern: '^[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{4}$'
          description: Date of issue of the document
          example: 15/01/2020
        expirationDate:
          type: string
          pattern: '^[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{4}$'
          description: Expiration date of the document
          example: 15/01/2030
        issuingInstitution:
          type: string
          description: Organization that issued the document
          example: Comune di Milano
    SubjectPaymentData:
      type: object
      properties:
        type:
          type: string
          enum: [transfer, check]
          description: Type of payment
          example: transfer
        iban:
          type: string
          description: IBAN bank account
          example: IT 99 C 12345 67890 123456789012
    NaturalPersonBirth:
      type: object
      properties:
        date:
          type: string
          pattern: '^[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{4}$'
          description: Date of birth
          example: 15/01/2000
        city:
          type: string
          description: City of birth
          example: Milano
        province:
          type: string
          description: Province of birth
          example: Lombardia
        country:
          type: string
          description: Country of birth
          example: Italia
